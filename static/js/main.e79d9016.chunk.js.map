{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageNumbers","Array","Math","ceil","fill","map","_","idx","className","classNames","disabled","href","onClick","page","active","length","items","from","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","lastItemIndex","firstItemIndex","currentPages","slice","id","value","onChange","event","target","changeSelect","htmlFor","setNewPage","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAOtC,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,aAGIC,EAAc,IAAIC,MACtBC,KAAKC,KAAKP,EAAQC,IAClBO,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAYA,EAAM,KAEhC,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAAUZ,IAAgBE,EAAY,KADxC,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAAeb,IAAgBE,EAAY,GAC3CY,QAAS,kBAAMb,EAAaD,EAAc,IAL5C,oBAUDE,EAAYK,KAAI,SAAAQ,GAAI,OACnB,oBACEL,UAAWC,IAAW,YAAa,CAAEK,OAAQhB,IAAgBe,IAD/D,SAIE,mBACE,UAAQ,WACRL,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAMb,EAAac,IAJ9B,SAMGA,KAREA,MAaT,oBAAIL,UAAWC,IAAW,YAAa,CACrCC,UAAWZ,IAAgBE,EAAYe,SADzC,SAIE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAK,QACL,gBAAeb,IAAgBE,EAAYe,OAC3CH,QAAS,kBAAMb,EAAaD,EAAc,IAL5C,wBCpDFkB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBjB,KAAI,SAAAe,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAgBC,mBAAS,IAAlB5B,EAAP,oBACA,EAA8B4B,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB4B,EAApB,KAEMC,EAAgB7B,EAAcD,EAC9B+B,EAAiBD,EAAgB9B,EACjCgC,EAAeb,EAAMc,MAAMF,EAAgBD,GAajD,OACE,sBAAKnB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiC8B,EAAiB,EADlD,cACyDD,EAAgB,GAAK,GAAKA,EADnF,eACuG/B,EADvG,OAIA,sBAAKY,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOnC,EACPoC,SAAU,SAAAC,IApBC,SAACA,GACpBT,GAAYS,EAAMC,OAAOH,OACzBN,EAAe,GAmBLU,CAAaF,IANjB,UASE,wBAAQF,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACc,IA9CF,SAACA,GACdf,IAAgBe,GAClBa,EAAeb,GA6CXyB,CAAWzB,MAIf,6BACGgB,EAAaxB,KAAI,SAAAQ,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YEtEjB0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e79d9016.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  },\n) => {\n  const pageNumbers = new Array(\n    Math.ceil(total / perPage),\n  ).fill(1).map((_, idx) => idx + 1);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === pageNumbers[0],\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === pageNumbers[0]}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(page => (\n        <li\n          className={classNames('page-item', { active: currentPage === page })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', {\n        disabled: +currentPage === pageNumbers.length,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageNumbers.length}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const lastItemIndex = currentPage * perPage;\n  const firstItemIndex = lastItemIndex - perPage;\n  const currentPages = items.slice(firstItemIndex, lastItemIndex);\n\n  const setNewPage = (page: number) => {\n    if (currentPage !== page) {\n      setCurrentPage(page);\n    }\n  };\n\n  const changeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex + 1} - ${lastItemIndex > 42 ? 42 : lastItemIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              changeSelect(event);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          setNewPage(page);\n        }}\n      />\n\n      <ul>\n        {currentPages.map(page => (\n          <li\n            data-cy=\"item\"\n            key={page}\n          >\n            {page}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}