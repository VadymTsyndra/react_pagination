{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageNumbers","i","Math","ceil","push","className","classNames","disabled","href","onClick","String","map","page","active","length","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","lastItemIndex","firstItemIndex","currentPages","slice","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAU1C,IAHI,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,aAGIC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,MAAMP,GAASC,GAAUI,GAAK,EACtDD,EAAYI,KAAKH,GAGnB,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,UAAWT,IAAgBE,EAAY,KADzC,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,iBAAgBV,IAAgBE,EAAY,GAAK,OAAS,QAC1DS,QAAS,kBAAMV,EAAaW,QAAQZ,EAAc,KALpD,oBAUDE,EAAYW,KAAI,SAAAC,GAAI,OACnB,oBACEP,UAAWC,IAAW,YAAa,CAAEO,QAASf,IAAgBc,IADhE,SAIE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBAAMV,EAAaW,OAAOE,KAJrC,SAMGA,KAREA,MAaT,oBAAIP,UAAWC,IAAW,YAAa,CACrCC,UAAWT,IAAgBE,EAAYc,SADzC,SAIE,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAK,QACL,iBAAgBV,IAAgBE,EAAYc,OAAS,OAAS,QAC9DL,QAAS,kBAAMV,EAAaW,QAAQZ,EAAc,KALpD,wBCtDFiB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQd,KAAKe,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAgBC,mBAAS,MAAlB1B,EAAP,oBACA,EAA8B0B,mBAAS,KAAvC,mBAAOzB,EAAP,KAAgB0B,EAAhB,KACA,EAAsCD,mBAAS,KAA/C,mBAAOxB,EAAP,KAAoB0B,EAApB,KAEMC,GAAiB3B,GAAeD,EAChC6B,GAAkBD,GAAiB5B,EACnC8B,EAAeZ,EAAMa,MAAMF,EAAgBD,GAEjD,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiC4B,EAAiB,EADlD,cACyDD,EADzD,eAC6E7B,EAD7E,OAIA,sBAAKS,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOjC,EACPkC,SAAU,SAAAC,GACRT,EAAWS,EAAMC,OAAOH,OACxBN,EAAe,MAPnB,UAUE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACa,GACTd,IAAgBc,GAClBY,EAAeZ,MAKrB,6BACGe,EAAahB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YE9DjBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0cf1d51b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: string;\n  perPage: string;\n  currentPage: string;\n  onPageChange: (page: string) => void;\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  },\n) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(+total / +perPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: +currentPage === pageNumbers[0],\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={+currentPage === pageNumbers[0] ? 'true' : 'false'}\n          onClick={() => onPageChange(String(+currentPage - 1))}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(page => (\n        <li\n          className={classNames('page-item', { active: +currentPage === page })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(String(page))}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', {\n        disabled: +currentPage === pageNumbers.length,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={+currentPage === pageNumbers.length ? 'true' : 'false'}\n          onClick={() => onPageChange(String(+currentPage + 1))}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState('42');\n  const [perPage, setPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState('1');\n\n  const lastItemIndex = +currentPage * +perPage;\n  const firstItemIndex = +lastItemIndex - +perPage;\n  const currentPages = items.slice(firstItemIndex, lastItemIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex + 1} - ${lastItemIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              setPerPage(event.target.value);\n              setCurrentPage('1');\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          if (currentPage !== page) {\n            setCurrentPage(page);\n          }\n        }}\n      />\n\n      <ul>\n        {currentPages.map(page => (\n          <li\n            data-cy=\"item\"\n            key={page}\n          >\n            {page}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}